---
name: ci

on: push

jobs:
  Spec:
    uses: "puppetlabs/cat-github-actions/.github/workflows/module_ci.yml@main"
    secrets: inherit

  setup_matrix:
    name: "Setup Test Matrix"
    needs: "Spec"
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.get-matrix.outputs.matrix }}

    steps:
    - name: Checkout Source
      uses: actions/checkout@v4

    - name: Activate Ruby 2.7
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "2.7"
        bundler-cache: true

    - name: Print bundle environment
      run: |
        echo ::group::bundler environment
        bundle env
        echo ::endgroup::

    - name: Setup Acceptance Test Matrix
      id: get-matrix
      run: |
        bundle exec matrix_from_metadata_v3 --matrix matrix.json --output github

  Acceptance:
    name: "${{matrix.platforms.label}}, ${{matrix.collection}}"
    needs:
      - setup_matrix
    if: ${{ needs.setup_matrix.outputs.matrix != '{}' }}

    runs-on: "${{matrix.platform.runner}}"
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup_matrix.outputs.matrix)}}

    env:
      PUPPET_GEM_VERSION: '~> 7.24'
      FACTER_GEM_VERSION: 'https://github.com/puppetlabs/facter#main'

    steps:
    - name: Checkout Source
      uses: actions/checkout@v4

    - name: Activate Ruby 2.7
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "2.7"
        bundler-cache: true

    - name: Print bundle environment
      run: |
        bundle env

    - name: Disable apparmor
      if: ${{matrix.platforms.provider == 'docker'}}
      run: |
        sudo systemctl disable apparmor
        sudo systemctl stop apparmor

    - name: Install vagrant
      if: ${{matrix.platforms.provider == 'vagrant'}}
      run: |
        sudo add-apt-repository ppa:evgeni/vagrant
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends vagrant vagrant-libvirt libvirt-daemon-system libvirt-daemon qemu-system-x86 qemu-utils dnsmasq
        sudo chmod 666 /var/run/libvirt/libvirt-sock

    - name: Provision test environment
      run: |
        bundle exec rake 'litmus:provision[${{matrix.platforms.provider}},${{ matrix.platforms.image }}]'

    - name: Install agent
      run: |
        bundle exec rake 'litmus:install_agent[${{ matrix.collection }}]'

    - name: Install module
      run: |
        bundle exec rake 'litmus:install_module'

    - name: Run acceptance tests
      run: |
        bundle exec rake 'litmus:acceptance:parallel'

    - name: Remove test environment
      if: ${{ always() }}
      continue-on-error: true
      run: |
        bundle exec rake 'litmus:tear_down'
...
